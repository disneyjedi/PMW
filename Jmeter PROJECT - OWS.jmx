<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="OWS_5.1" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="General Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <longProp name="ThreadGroup.start_time">1453693449000</longProp>
        <longProp name="ThreadGroup.end_time">1453693449000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-248649279">hotelCode</stringProp>
            <stringProp name="-742275029">primaryLangID</stringProp>
            <stringProp name="-1324166184">numberOfRooms</stringProp>
            <stringProp name="2103251231">totalNumberOfGuests</stringProp>
            <stringProp name="-1423116001">numberOfChildren</stringProp>
            <stringProp name="-125810928">StartDate</stringProp>
            <stringProp name="56925961">EndDate</stringProp>
            <stringProp name="1317580878">chainCode</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1237023212">
              <stringProp name="78864971">SHDLH</stringProp>
              <stringProp name="69">E</stringProp>
              <stringProp name="-1198086026">${__Random(1,3,)}</stringProp>
              <stringProp name="-1198056235">${__Random(1,4,)}</stringProp>
              <stringProp name="-1226744968">${__Random(0,2,)}</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="66684">CHA</stringProp>
            </collectionProp>
            <collectionProp name="-607354047">
              <stringProp name="78880564">SHTSH</stringProp>
              <stringProp name="67">C</stringProp>
              <stringProp name="-1198086026">${__Random(1,3,)}</stringProp>
              <stringProp name="-1198056235">${__Random(1,4,)}</stringProp>
              <stringProp name="-1226744968">${__Random(0,2,)}</stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="0"></stringProp>
              <stringProp name="66684">CHA</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">true</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Get Next day" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters">${__Random(0,100,)} ${__Random(1,4,)}</stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat; 
import java.util.Date; 

Date sdate = new Date();
Date edate = new Date();

int xDay = Integer.parseInt(bsh.args[0]);
int yDay = Integer.parseInt(bsh.args[1]);
sdate.setDate(sdate.getDate()+ 100 + xDay);
edate.setDate(edate.getDate()+ 100 + xDay + yDay);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); 
SimpleDateFormat edf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); 
String sformattedDate = sdf.format(sdate);
String eformattedDate = edf.format(edate);
vars.put(&quot;startDate&quot;,sformattedDate);
vars.put(&quot;endDate&quot;,eformattedDate);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SOAP/XML-RPC Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">https://211.147.91.151/ows_ws_51/Availability.asmx</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
  &lt;soap:Header&gt;
    &lt;OGHeader transactionID=&quot;000032&quot; primaryLangID=&quot;${primaryLangID}&quot; timeStamp=&quot;2008-12-09T09:55:16.3618750-05:00&quot; xmlns=&quot;http://webservices.micros.com/og/4.3/Core/&quot;&gt;
      &lt;Origin entityID=&quot;OWS&quot; systemType=&quot;WEB&quot; /&gt;
      &lt;Destination entityID=&quot;TI&quot; systemType=&quot;PMS&quot; /&gt;
    &lt;/OGHeader&gt;
  &lt;/soap:Header&gt;
  &lt;soap:Body&gt;
    &lt;AvailabilityRequest xmlns:a=&quot;http://webservices.micros.com/og/4.3/Availability/&quot; xmlns:hc=&quot;http://webservices.micros.com/og/4.3/HotelCommon/&quot; summaryOnly=&quot;true&quot; xmlns=&quot;http://webservices.micros.com/ows/5.1/Availability.wsdl&quot;&gt;
      &lt;a:AvailRequestSegment availReqType=&quot;Room&quot; numberOfRooms=&quot;${__Random(1,3,)}&quot; totalNumberOfGuests=&quot;${__Random(1,4,)}&quot; numberOfChildren=&quot;${__Random(0,2,)}&quot;&gt;
        &lt;a:StayDateRange&gt;
          &lt;hc:StartDate&gt;${startDate}&lt;/hc:StartDate&gt;
          &lt;hc:EndDate&gt;${endDate}&lt;/hc:EndDate&gt;
        &lt;/a:StayDateRange&gt;
        &lt;a:HotelSearchCriteria&gt;
          &lt;a:Criterion&gt;
            &lt;a:HotelRef chainCode=&quot;${chainCode}&quot; hotelCode=&quot;${hotelCode}&quot; /&gt;
          &lt;/a:Criterion&gt;
        &lt;/a:HotelSearchCriteria&gt;
      &lt;/a:AvailRequestSegment&gt;
    &lt;/AvailabilityRequest&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION">http://webservices.micros.com/ows/5.1/Availability.wsdl#Availability</stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1733211742">Result resultStatusFlag=&quot;SUCCESS&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Detail Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1453693449000</longProp>
        <longProp name="ThreadGroup.end_time">1453693449000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="primaryLangID" elementType="Argument">
              <stringProp name="Argument.name">primaryLangID</stringProp>
              <stringProp name="Argument.value">E</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="numberOfRooms" elementType="Argument">
              <stringProp name="Argument.name">numberOfRooms</stringProp>
              <stringProp name="Argument.value">${__Random(1,3,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="totalNumberOfGuests" elementType="Argument">
              <stringProp name="Argument.name">totalNumberOfGuests</stringProp>
              <stringProp name="Argument.value">${__Random(1,4,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="numberOfChildren" elementType="Argument">
              <stringProp name="Argument.name">numberOfChildren</stringProp>
              <stringProp name="Argument.value">${__Random(0,2,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="startDate" elementType="Argument">
              <stringProp name="Argument.name">startDate</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="endDate" elementType="Argument">
              <stringProp name="Argument.name">endDate</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="chainCode" elementType="Argument">
              <stringProp name="Argument.name">chainCode</stringProp>
              <stringProp name="Argument.value">CHA</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-248649279">hotelCode</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="811221065">
              <stringProp name="78864971">SHDLH</stringProp>
            </collectionProp>
            <collectionProp name="875024880">
              <stringProp name="78880564">SHTSH</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="Get Next day" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters">${__Random(1,4,)}</stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat; 
import java.util.Date; 

Date sdate = new Date();
Date edate = new Date();

int xDay = Integer.parseInt(bsh.args[0]);
sdate.setDate(sdate.getDate()+ 200);
edate.setDate(edate.getDate()+ 200 + xDay);

SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); 
SimpleDateFormat edf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;); 
String sformattedDate = sdf.format(sdate);
String eformattedDate = edf.format(edate);
vars.put(&quot;startDate&quot;,sformattedDate);
vars.put(&quot;endDate&quot;,eformattedDate);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <SoapSampler guiclass="SoapSamplerGui" testclass="SoapSampler" testname="SOAP/XML-RPC Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SoapSampler.URL_DATA">https://211.147.91.151/ows_ws_51/Availability.asmx</stringProp>
          <stringProp name="HTTPSamper.xml_data">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
  &lt;soap:Header&gt;
    &lt;OGHeader transactionID=&quot;000032&quot; primaryLangID=&quot;C&quot; timeStamp=&quot;2008-12-09T09:55:16.3618750-05:00&quot; xmlns=&quot;http://webservices.micros.com/og/4.3/Core/&quot;&gt;
      &lt;Origin entityID=&quot;OWS&quot; systemType=&quot;WEB&quot; /&gt;
      &lt;Destination entityID=&quot;TI&quot; systemType=&quot;PMS&quot; /&gt;
    &lt;/OGHeader&gt;
  &lt;/soap:Header&gt;
  &lt;soap:Body&gt;
    &lt;AvailabilityRequest xmlns:a=&quot;http://webservices.micros.com/og/4.3/Availability/&quot; xmlns:hc=&quot;http://webservices.micros.com/og/4.3/HotelCommon/&quot; summaryOnly=&quot;true&quot; xmlns=&quot;http://webservices.micros.com/ows/5.1/Availability.wsdl&quot;&gt;
      &lt;a:AvailRequestSegment availReqType=&quot;Room&quot; numberOfRooms=&quot;${numberOfRooms}&quot; totalNumberOfGuests=&quot;${totalNumberOfGuests}&quot; numberOfChildren=&quot;${numberOfChildren}&quot;&gt;
        &lt;a:StayDateRange&gt;
          &lt;hc:StartDate&gt;${startDate}&lt;/hc:StartDate&gt;
          &lt;hc:EndDate&gt;${endDate}&lt;/hc:EndDate&gt;
        &lt;/a:StayDateRange&gt;
        &lt;a:HotelSearchCriteria&gt;
          &lt;a:Criterion&gt;
            &lt;a:HotelRef chainCode=&quot;${chainCode}&quot; hotelCode=&quot;${hotelCode}&quot; /&gt;
          &lt;/a:Criterion&gt;
        &lt;/a:HotelSearchCriteria&gt;
      &lt;/a:AvailRequestSegment&gt;
    &lt;/AvailabilityRequest&gt;
  &lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
          <stringProp name="SoapSampler.xml_data_file"></stringProp>
          <stringProp name="SoapSampler.SOAP_ACTION">http://webservices.micros.com/ows/5.1/Availability.wsdl#Availability</stringProp>
          <stringProp name="SoapSampler.SEND_SOAP_ACTION">true</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </SoapSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">1</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1733211742">Result resultStatusFlag=&quot;SUCCESS&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
